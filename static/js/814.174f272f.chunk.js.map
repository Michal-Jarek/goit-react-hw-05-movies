{"version":3,"file":"static/js/814.174f272f.chunk.js","mappings":"uQAuDA,EAjDqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,GADWC,EAAAA,EAAAA,MACOC,SAASC,UAAU,GAiB3C,IAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,8GAEaC,EAAAA,EAAAA,GAAWN,GAFxB,OAEJO,EAFI,OAGVR,EAASQ,GAHC,gDAKVC,QAAQC,IAAR,MALU,yDAAH,qDASX,OADAJ,IACO,kBAAMN,EAAS,KAAf,CAER,GAAE,IAEHS,QAAQC,IAAIX,GACRA,EAAO,CACT,IACeY,EAMXZ,EANFa,YACAC,EAKEd,EALFc,MACAC,EAIEf,EAJFe,aACAC,EAGEhB,EAHFgB,aACEC,EAEAjB,EAFAiB,SACFC,EACElB,EADFkB,OAEF,OACE,iCACE,0BACE,gBAAKN,IAAG,yCAAoCA,GAAOO,IAAKL,OAE1D,4BACE,kCAAQA,EAAR,aAAkBC,EAAaK,MAAM,EAAG,GAAxC,QACA,2CAAmBC,KAAKC,MAAqB,GAAfN,GAA9B,QACA,sCACA,0BAAOC,KACD,oCACA,0BAAQC,EAAOK,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,gBAIrC,CACD,OAAO,SAACC,EAAA,EAAD,GACR,ECpDD,EAAuB,+BCevB,EAVyB,WACvB,OACE,gBAAKC,UAAWC,EAAhB,UAEI,SAAC,EAAD,KAIP,C,oHCZKC,EAAS,4CAGTC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,MAGLC,EAAa,mCAAG,oGACGJ,EAASK,IAAT,UARH,sBAQG,OAAgCN,IADnC,cACdpB,EADc,yBAEbA,EAAS2B,KAAKC,SAFD,2CAAH,qDAKb7B,EAAU,mCAAG,WAAM8B,GAAN,uFACMR,EAASK,IAAT,gBAAsBG,GAAtB,OAA2BT,IADjC,cACXpB,EADW,yBAEVA,EAAS2B,MAFC,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.module.scss?d49b","pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.jsx","utils/api/fetchMovie.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovie } from '../../utils/api/fetchMovie';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const filmId = location.pathname.substring(8);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await fetchMovie(filmId);\n        setMovie(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetch();\n    return () => setMovie(null);\n    // eslint-disable-next-line\n  }, []);\n\n  console.log(movie);\n  if (movie) {\n    const {\n      poster_path: src,\n      title,\n      release_date,\n      vote_average,\n        overview,\n      genres\n    } = movie;\n    return (\n      <>\n        <div>\n          <img src={`https://image.tmdb.org/t/p/w500${src}`} alt={title} />\n        </div>\n        <div>\n          <h1>{`${title} (${release_date.slice(0, 4)})`}</h1>\n          <span>User Score: {Math.round(vote_average * 10)}%</span>\n          <h2>Overview</h2>\n          <span>{overview}</span>\n                <h3>Genres</h3>\n                <span>{ genres.map(genre => `${genre.name}, `)}</span>\n        </div>\n      </>\n    );\n  }\n  return <Loader />;\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieDetailsPage_card__ESakD\"};","import MovieDetails from 'components/MovieDetails/MovieDetails';\n\nimport scss from './MovieDetailsPage.module.scss';\n\n\n\nconst MovieDetailsPage = () => {\n  return (\n    <div className={scss.card}>\n\n        <MovieDetails />\n\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst apiKey = '?api_key=b6baed1eb57186fb03779557a2765daa';\nconst trendingToday = 'trending/movie/day';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  timeout: 3000,\n});\n\nconst fetchTrending = async () => {\n  const response = await instance.get(`${trendingToday}${apiKey}`);\n  return response.data.results;\n};\n\nconst fetchMovie = async id => {\n  const response = await instance.get(`movie/${id}${apiKey}`);\n  return response.data;\n};\n\nexport { fetchTrending, fetchMovie };\n"],"names":["useState","movie","setMovie","filmId","useLocation","pathname","substring","useEffect","fetch","fetchMovie","response","console","log","src","poster_path","title","release_date","vote_average","overview","genres","alt","slice","Math","round","map","genre","name","Loader","className","scss","apiKey","instance","axios","baseURL","timeout","fetchTrending","get","data","results","id"],"sourceRoot":""}