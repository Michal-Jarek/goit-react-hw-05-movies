{"version":3,"file":"static/js/340.5ad322a8.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.scss?0a3a","components/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.module.scss?d49b","pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.jsx","utils/api/fetchMovie.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nexport const BackLink = ({ to }) => {\n  let pathname = to;\n  if (typeof to === 'object') pathname = `${to.pathname}${to.search}`;\n\n  const navigate = useNavigate();\n  const handleClick = () => navigate(pathname);\n\n  return <button onClick={handleClick}>Powr√≥t</button>;\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"template\":\"MovieDetails_template__FWs7W\",\"description\":\"MovieDetails_description__1k5mo\"};","import { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { fetchMovie } from '../../utils/api/fetchMovie';\n\nimport PropTypes from 'prop-types';\nimport scss from './MovieDetails.module.scss';\n\nconst MovieDetails = ({ filmId }) => {\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        console.log('w fetch reviews');\n        const response = await fetchMovie(filmId);\n        setMovie(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetch();\n    return () => setMovie(null);\n  }, [filmId]);\n\n  if (movie) {\n    const {\n      poster_path: src,\n      title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = movie;\n    return (\n      <>\n        <div className={scss.template}>\n          <div>\n            <img src={`https://image.tmdb.org/t/p/w500${src}`} alt={title} />\n          </div>\n          <div className={scss.description}>\n            <h1>{`${title} (${release_date.slice(0, 4)})`}</h1>\n            <span>User Score: {Math.round(vote_average * 10)}%</span>\n            <h2>Overview</h2>\n            <span>{overview}</span>\n            <h3>Genres</h3>\n            <span>{genres.map(genre => `${genre.name}, `)}</span>\n          </div>\n        </div>\n      </>\n    );\n  }\n  return <Loader />;\n};\n\nMovieDetails.propTypes = {\n  filmId: PropTypes.string,\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieDetailsPage_card__ESakD\"};","import { BackLink } from 'components/BackLink/BackLink';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\n\nimport scss from './MovieDetailsPage.module.scss';\n\nlet backLinkHref = '/movies';\n\nconst MovieDetailsPage = () => {\n  const [searchParams] = useSearchParams();\n  const [filmId, setFilmId] = useState(null);\n  const location = useLocation();\n  if (location.state?.from) backLinkHref = location.state?.from;\n\n  useEffect(() => {\n    setFilmId(searchParams.get('id'));\n    // eslint-disable-next-line\n  }, []);\n\n  if (filmId)\n    return (\n      <div>\n        <BackLink to={backLinkHref} txtButton={'cokolwiek'} />\n        <div className={scss.card}>\n          <MovieDetails filmId={filmId} />\n          <div>\n            <p>Additional information:</p>\n            <ul>\n              <li>\n                <NavLink to={`cast?id=${filmId}`}>Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to={`reviews?id=${filmId}`}>Reviews</NavLink>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </div>\n      </div>\n    );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst apiKey = '?api_key=b6baed1eb57186fb03779557a2765daa';\nconst trendingToday = 'trending/movie/day';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  timeout: 3000,\n});\n\nconst fetchTrending = async () => {\n  const response = await instance.get(`${trendingToday}${apiKey}`);\n  return response.data.results;\n};\n\nconst fetchMovie = async id => {\n  const response = await instance.get(`movie/${id}${apiKey}`);\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews${apiKey}`);\n  if (response.data.results.length === 0) return null;\n  return response.data.results;\n};\nconst fetchCasts = async id => {\n  const response = await instance.get(`movie/${id}/credits${apiKey}`);\n  if (response.data.cast.length === 0) return null;\n  return response.data.cast;\n};\n\nconst fetchMovieByTitle = async title => {\n  const response = await instance.get(\n    `search/movie${apiKey}&query=${title}&language=en-US&page=1&include_adult=true`\n  );\n  if (response.data.results === 0) return null;\n  return response.data.results;\n};\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchReviews,\n  fetchCasts,\n  fetchMovieByTitle,\n};\n"],"names":["BackLink","to","pathname","search","navigate","useNavigate","onClick","filmId","useState","movie","setMovie","useEffect","fetch","console","log","fetchMovie","response","src","poster_path","title","release_date","vote_average","overview","genres","className","scss","alt","slice","Math","round","map","genre","name","Loader","backLinkHref","useSearchParams","searchParams","setFilmId","location","useLocation","state","from","get","txtButton","apiKey","instance","axios","baseURL","timeout","fetchTrending","data","results","id","fetchReviews","length","fetchCasts","cast","fetchMovieByTitle"],"sourceRoot":""}