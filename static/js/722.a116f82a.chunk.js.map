{"version":3,"file":"static/js/722.a116f82a.chunk.js","mappings":"sQAMMA,EAAgB,WACpB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAEDC,EAAAA,EAAAA,MAFC,OAElBC,EAFkB,OAGxBN,EAAkBM,GAHM,gDAKxBC,QAAQC,IAAR,MALwB,yDAAH,qDAQK,IAA1BT,EAAeU,QAAcL,GAClC,GAAE,CAACL,IAE0B,IAA1BA,EAAeU,OAEjB,OADAF,QAAQC,IAAIT,IAEV,iCACE,4CACA,wBACGA,EAAeW,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OAClB,yBACE,SAAC,KAAD,CAASC,GAAE,0BAAqBD,GAAME,MAAO,CAAEC,KAAMd,GAArD,SACGU,KAFIC,EADS,QAW7B,ECtCD,GAAiB,ECOjB,EALiB,kBACf,gBAAKI,UAAWC,EAAAA,SAAhB,UACE,SAACpB,EAAD,KAFa,C,sKCDXqB,EAAS,4CAGTC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,MAGLjB,EAAa,mCAAG,oGACGc,EAASI,IAAT,UARH,sBAQG,OAAgCL,IADnC,cACdZ,EADc,yBAEbA,EAASkB,KAAKC,SAFD,2CAAH,qDAKbC,EAAU,mCAAG,WAAMd,GAAN,uFACMO,EAASI,IAAT,gBAAsBX,GAAtB,OAA2BM,IADjC,cACXZ,EADW,yBAEVA,EAASkB,MAFC,2CAAH,sDAKVG,EAAY,mCAAG,WAAMf,GAAN,uFACIO,EAASI,IAAT,gBAAsBX,EAAtB,mBAAmCM,IADvC,UAEkB,KAD/BZ,EADa,QAENkB,KAAKC,QAAQhB,OAFP,yCAE4B,MAF5B,gCAGZH,EAASkB,KAAKC,SAHF,2CAAH,sDAKZG,EAAU,mCAAG,WAAMhB,GAAN,uFACMO,EAASI,IAAT,gBAAsBX,EAAtB,mBAAmCM,IADzC,UAEiB,KAD5BZ,EADW,QAEJkB,KAAKK,KAAKpB,OAFN,yCAE2B,MAF3B,gCAGVH,EAASkB,KAAKK,MAHJ,2CAAH,qD","sources":["components/TrendingToday/TrendingToday.jsx","pages/HomePage/HomePage.module.scss","pages/HomePage/HomePage.jsx","utils/api/fetchMovie.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { fetchTrending } from 'utils/api/fetchMovie';\n\n//import scss from './TrendingToday.module.scss';\n\nconst TrendingToday = () => {\n  const [trendMovieList, setTrendMovieList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrendMovieList = async () => {\n      try {\n        const response = await fetchTrending();\n        setTrendMovieList(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    if (trendMovieList.length === 0) fetchTrendMovieList();\n  }, [trendMovieList]);\n\n  if (trendMovieList.length !== 0) {\n    console.log(trendMovieList);\n    return (\n      <>\n        <h2>Trending today</h2>\n        <ul>\n          {trendMovieList.map(({ original_title, id }) => (\n            <li key={id}>\n              <NavLink to={`movies/movie?id=${id}`} state={{ from: location }}>\n                {original_title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n};\nexport { TrendingToday };\n","// extracted by mini-css-extract-plugin\nexport default {};","import { TrendingToday } from 'components/TrendingToday/TrendingToday';\nimport scss from './HomePage.module.scss';\n\nconst HomePage = () => (\n  <div className={scss.homepage}>\n    <TrendingToday />\n  </div>\n);\nexport default HomePage;","import axios from 'axios';\n\nconst apiKey = '?api_key=b6baed1eb57186fb03779557a2765daa';\nconst trendingToday = 'trending/movie/day';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  timeout: 3000,\n});\n\nconst fetchTrending = async () => {\n  const response = await instance.get(`${trendingToday}${apiKey}`);\n  return response.data.results;\n};\n\nconst fetchMovie = async id => {\n  const response = await instance.get(`movie/${id}${apiKey}`);\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews${apiKey}`);\n  if (response.data.results.length === 0) return null;\n  return response.data.results;\n};\nconst fetchCasts = async id => {\n  const response = await instance.get(`movie/${id}/credits${apiKey}`);\n  if (response.data.cast.length === 0) return null;\n  return response.data.cast;\n};\n\nexport { fetchTrending, fetchMovie, fetchReviews, fetchCasts };\n"],"names":["TrendingToday","useState","trendMovieList","setTrendMovieList","location","useLocation","useEffect","fetchTrendMovieList","fetchTrending","response","console","log","length","map","original_title","id","to","state","from","className","scss","apiKey","instance","axios","baseURL","timeout","get","data","results","fetchMovie","fetchReviews","fetchCasts","cast"],"sourceRoot":""}