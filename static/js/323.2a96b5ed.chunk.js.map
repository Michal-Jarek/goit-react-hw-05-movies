{"version":3,"file":"static/js/323.2a96b5ed.chunk.js","mappings":"oOACA,EAA4B,4BAA5B,EAA0E,kC,SCE7DA,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAMG,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,KAAoBC,EAA0B,EAAxCC,aAAoBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC7CC,EAAM,GAIV,OAHmBA,EAAN,OAATJ,EAAqB,uCACjB,yCAAqCA,IAG3C,gBAAIJ,UAAWC,EAAf,WACE,gBAAKO,IAAKA,EAAKC,IAAKN,KACpB,wBAAKA,KACL,0CAAkBG,EAAlB,SAHwCC,EAM7C,KAGN,E,yBCUD,EA1Ba,WAEX,OAAgBG,EAAAA,EAAAA,MAATC,GAAP,eACA,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMP,EAAKI,EAAMI,IAAI,MAkBrB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,8GAEaC,EAAAA,EAAAA,IAAWX,GAFxB,OAEJY,EAFI,OAGVL,EAASK,GAHC,gDAKVC,QAAQC,IAAR,MALU,yDAAH,qDASX,OADKR,GAAOI,IACL,kBAAMH,GAAS,EAAf,CAER,GAAE,IAIED,GACE,gCAAM,SAACf,EAAD,CAAUC,OAAK,OAAMc,SADf,iEAEpB,C,8LC5BKS,EAAS,4CAGTC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,MAGLC,EAAa,mCAAG,oGACGJ,EAASR,IAAT,UARH,sBAQG,OAAgCO,IADnC,cACdH,EADc,yBAEbA,EAASS,KAAKC,SAFD,2CAAH,qDAKbC,EAAU,mCAAG,WAAMvB,GAAN,uFACMgB,EAASR,IAAT,gBAAsBR,GAAtB,OAA2Be,IADjC,cACXH,EADW,yBAEVA,EAASS,MAFC,2CAAH,sDAKVG,EAAY,mCAAG,WAAMxB,GAAN,uFACIgB,EAASR,IAAT,gBAAsBR,EAAtB,mBAAmCe,IADvC,UAEkB,KAD/BH,EADa,QAENS,KAAKC,QAAQG,OAFP,yCAE4B,MAF5B,gCAGZb,EAASS,KAAKC,SAHF,2CAAH,sDAKZX,EAAU,mCAAG,WAAMX,GAAN,uFACMgB,EAASR,IAAT,gBAAsBR,EAAtB,mBAAmCe,IADzC,UAEiB,KAD5BH,EADW,QAEJS,KAAKK,KAAKD,OAFN,yCAE2B,MAF3B,gCAGVb,EAASS,KAAKK,MAHJ,2CAAH,sDAMVC,EAAiB,mCAAG,WAAMC,GAAN,uFACDZ,EAASR,IAAT,sBACNO,EADM,kBACUa,EADV,8CADC,UAIM,KAHxBhB,EADkB,QAIXS,KAAKC,QAJM,yCAIgB,MAJhB,gCAKjBV,EAASS,KAAKC,SALG,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/CastCard/CastCard.module.scss?1bf9","components/CastCard/CastCard.jsx","pages/MoviesPage/MovieDetailsPage/Cast/Cast.jsx","utils/api/fetchMovie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"CastCard_cast_list__kFGZE\",\"cast_list__item\":\"CastCard_cast_list__item__3shQj\"};","import PropTypes from 'prop-types';\nimport scss from './CastCard.module.scss';\n\nexport const CastCard = ({ array }) => {\n  return (\n    <ul className={scss.cast_list}>\n      {array.map(({ name, profile_path: path, character, id }) => {\n        let src = '';\n        if (path === null) src = 'https://picsum.photos/id/237/274/398';\n        else src = `https://image.tmdb.org/t/p/w500${path}`;\n\n        return (\n          <li className={scss.cast_list__item} key={id}>\n            <img src={src} alt={name} />\n            <h4>{name}</h4>\n            <span>Character: {character} </span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastCard.propTypes = {\n  array: PropTypes.array,\n};\n","import { CastCard } from 'components/CastCard/CastCard';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchCasts } from 'utils/api/fetchMovie';\n\nconst Cast = () => {\n  // eslint-disable-next-line\n  const [getId] = useSearchParams();\n  const [casts, setCasts] = useState(false);\n  // eslint-disable-next-line\n  const id = getId.get('id');\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await fetchCasts(id);\n        setCasts(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    if (!casts) fetch();\n    return () => setCasts(false);\n    // eslint-disable-next-line\n  }, []);\n\n\n\n  if (!casts) return <span>We don't have casts for this movie.</span>;\n  return <div> <CastCard array={[...casts]} /></div>;\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst apiKey = '?api_key=b6baed1eb57186fb03779557a2765daa';\nconst trendingToday = 'trending/movie/day';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  timeout: 3000,\n});\n\nconst fetchTrending = async () => {\n  const response = await instance.get(`${trendingToday}${apiKey}`);\n  return response.data.results;\n};\n\nconst fetchMovie = async id => {\n  const response = await instance.get(`movie/${id}${apiKey}`);\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews${apiKey}`);\n  if (response.data.results.length === 0) return null;\n  return response.data.results;\n};\nconst fetchCasts = async id => {\n  const response = await instance.get(`movie/${id}/credits${apiKey}`);\n  if (response.data.cast.length === 0) return null;\n  return response.data.cast;\n};\n\nconst fetchMovieByTitle = async title => {\n  const response = await instance.get(\n    `search/movie${apiKey}&query=${title}&language=en-US&page=1&include_adult=true`\n  );\n  if (response.data.results === 0) return null;\n  return response.data.results;\n};\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchReviews,\n  fetchCasts,\n  fetchMovieByTitle,\n};\n"],"names":["CastCard","array","className","scss","map","name","path","profile_path","character","id","src","alt","useSearchParams","getId","useState","casts","setCasts","get","useEffect","fetch","fetchCasts","response","console","log","apiKey","instance","axios","baseURL","timeout","fetchTrending","data","results","fetchMovie","fetchReviews","length","cast","fetchMovieByTitle","title"],"sourceRoot":""}