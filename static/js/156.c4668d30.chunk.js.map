{"version":3,"file":"static/js/156.c4668d30.chunk.js","mappings":"6OAEaA,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,wBACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACT,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADA,KAQhB,E,yBCkBD,EA1BgB,WACd,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACA,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,8GAEaC,EAAAA,EAAAA,IAAaN,EAAMO,IAAI,OAFpC,OAEJC,EAFI,OAGVL,EAAWK,GAHD,gDAKVC,QAAQC,IAAR,MALU,yDAAH,qDASX,OADKR,GAASG,IACP,kBAAMF,GAAW,EAAjB,CAER,GAAE,CAACH,IAECE,GAEH,0BACE,SAACT,EAAD,CAAaC,OAAK,OAAMQ,QAHP,uEAMtB,C,8LC3BKS,EAAS,4CAGTC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,QAAS,MAGLC,EAAa,mCAAG,oGACGJ,EAASL,IAAT,UARH,sBAQG,OAAgCI,IADnC,cACdH,EADc,yBAEbA,EAASS,KAAKC,SAFD,2CAAH,qDAKbC,EAAU,mCAAG,WAAMrB,GAAN,uFACMc,EAASL,IAAT,gBAAsBT,GAAtB,OAA2Ba,IADjC,cACXH,EADW,yBAEVA,EAASS,MAFC,2CAAH,sDAKVX,EAAY,mCAAG,WAAMR,GAAN,uFACIc,EAASL,IAAT,gBAAsBT,EAAtB,mBAAmCa,IADvC,UAEkB,KAD/BH,EADa,QAENS,KAAKC,QAAQE,OAFP,yCAE4B,MAF5B,gCAGZZ,EAASS,KAAKC,SAHF,2CAAH,sDAKZG,EAAU,mCAAG,WAAMvB,GAAN,uFACMc,EAASL,IAAT,gBAAsBT,EAAtB,mBAAmCa,IADzC,UAEiB,KAD5BH,EADW,QAEJS,KAAKK,KAAKF,OAFN,yCAE2B,MAF3B,gCAGVZ,EAASS,KAAKK,MAHJ,2CAAH,sDAMVC,EAAiB,mCAAG,WAAMC,GAAN,uFACDZ,EAASL,IAAT,sBACNI,EADM,kBACUa,EADV,8CADC,UAIM,KAHxBhB,EADkB,QAIXS,KAAKC,QAJM,yCAIgB,MAJhB,gCAKjBV,EAASS,KAAKC,SALG,2CAAH,qD","sources":["components/ReviewsCard/ReviewsCard.jsx","pages/MoviesPage/MovieDetailsPage/Reviews/Reviews.jsx","utils/api/fetchMovie.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewsCard = ({ array }) => {\n  return (\n    <ul>\n      {array.map(({ author, content, id }) => (\n        <li key={id}>\n          <h2>Author: {author}</h2>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\nReviewsCard.propTypes = {\n  array: PropTypes.array,\n};\n","import { ReviewsCard } from 'components/ReviewsCard/ReviewsCard';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchReviews } from 'utils/api/fetchMovie';\n\nconst Reviews = () => {\n  const [getId] = useSearchParams();\n  const [reviews, setReviews] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await fetchReviews(getId.get('id'));\n        setReviews(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    if (!reviews) fetch();\n    return () => setReviews(false);\n    // eslint-disable-next-line\n  }, [getId]);\n\n  if (!reviews) return <span>We don't have any reviews for this movie.</span>;\n  return (\n    <div>\n      <ReviewsCard array={[...reviews]} />\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst apiKey = '?api_key=b6baed1eb57186fb03779557a2765daa';\nconst trendingToday = 'trending/movie/day';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  timeout: 3000,\n});\n\nconst fetchTrending = async () => {\n  const response = await instance.get(`${trendingToday}${apiKey}`);\n  return response.data.results;\n};\n\nconst fetchMovie = async id => {\n  const response = await instance.get(`movie/${id}${apiKey}`);\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await instance.get(`movie/${id}/reviews${apiKey}`);\n  if (response.data.results.length === 0) return null;\n  return response.data.results;\n};\nconst fetchCasts = async id => {\n  const response = await instance.get(`movie/${id}/credits${apiKey}`);\n  if (response.data.cast.length === 0) return null;\n  return response.data.cast;\n};\n\nconst fetchMovieByTitle = async title => {\n  const response = await instance.get(\n    `search/movie${apiKey}&query=${title}&language=en-US&page=1&include_adult=true`\n  );\n  if (response.data.results === 0) return null;\n  return response.data.results;\n};\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchReviews,\n  fetchCasts,\n  fetchMovieByTitle,\n};\n"],"names":["ReviewsCard","array","map","author","content","id","useSearchParams","getId","useState","reviews","setReviews","useEffect","fetch","fetchReviews","get","response","console","log","apiKey","instance","axios","baseURL","timeout","fetchTrending","data","results","fetchMovie","length","fetchCasts","cast","fetchMovieByTitle","title"],"sourceRoot":""}